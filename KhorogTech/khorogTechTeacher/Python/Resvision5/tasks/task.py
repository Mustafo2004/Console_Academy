# Here's a set of 20 Python tasks for students aged 12-14 that use various concepts like math operations, list methods (`append`, `remove`), dictionaries, for loops, if-else statements, and functions. Each task is explained step-by-step in Russian:

# ### Задание 1: Сумма чисел в списке
# **Описание:** Напишите программу, которая создает список из 5 чисел, а затем вычисляет их сумму.
# **Шаги:**
# 1. Создайте пустой список.
# 2. Используйте цикл `for`, чтобы добавить 5 чисел в список.
# 3. Используйте функцию `sum()`, чтобы вычислить сумму чисел в списке.
# 4. Выведите результат.

# ### Задание 2: Удаление элемента из списка
# **Описание:** Напишите программу, которая удаляет определенное число из списка, если оно присутствует.
# **Шаги:**
# 1. Создайте список с 5 числами.
# 2. Используйте метод `remove()`, чтобы удалить указанное число.
# 3. Если число не найдено, выведите сообщение об ошибке.
# 4. Выведите измененный список.

# ### Задание 3: Среднее значение чисел
# **Описание:** Напишите программу, которая вычисляет среднее значение чисел в списке.
# **Шаги:**
# 1. Создайте список с 5 чисел.
# 2. Используйте цикл `for`, чтобы вычислить сумму всех чисел.
# 3. Разделите сумму на количество чисел и выведите результат.

# ### Задание 4: Функция для вычисления факториала
# **Описание:** Напишите функцию, которая принимает число и возвращает его факториал.
# **Шаги:**
# 1. Создайте функцию `factorial(n)`, где `n` — входное число.
# 2. Используйте цикл `for`, чтобы вычислить факториал.
# 3. Верните результат.

# ### Задание 5: Словарь с оценками
# **Описание:** Создайте словарь, где ключи — это имена студентов, а значения — их оценки. Добавьте новые оценки и удалите старые.
# **Шаги:**
# 1. Создайте словарь с 3 записями.
# 2. Добавьте новую оценку для студента.
# 3. Удалите оценку для другого студента.
# 4. Выведите обновленный словарь.

# ### Задание 6: Проверка чисел на четность
# **Описание:** Напишите программу, которая проверяет, являются ли числа в списке четными или нечетными.
# **Шаги:**
# 1. Создайте список с 5 числами.
# 2. Используйте цикл `for`, чтобы проверить каждое число.
# 3. Используйте `if-else`, чтобы определить четность числа и вывести соответствующее сообщение.

# ### Задание 7: Функция для нахождения максимального числа
# **Описание:** Напишите функцию, которая находит максимальное число в списке.
# **Шаги:**
# 1. Создайте функцию `find_max(lst)`, где `lst` — список чисел.
# 2. Используйте цикл `for`, чтобы найти максимальное число.
# 3. Верните результат.

# ### Задание 8: Создание списка квадратов
# **Описание:** Напишите программу, которая создает список квадратов чисел от 1 до 10.
# **Шаги:**
# 1. Создайте пустой список.
# 2. Используйте цикл `for`, чтобы добавить квадраты чисел от 1 до 10 в список.
# 3. Выведите результат.

# ### Задание 9: Словарь с инфо о пользователях
# **Описание:** Создайте словарь с информацией о пользователях (имя, возраст). Добавьте нового пользователя и удалите существующего.
# **Шаги:**
# 1. Создайте словарь с 2 пользователями.
# 2. Добавьте нового пользователя.
# 3. Удалите одного пользователя.
# 4. Выведите обновленный словарь.

# ### Задание 10: Поиск значения в словаре
# **Описание:** Напишите программу, которая ищет значение по ключу в словаре.
# **Шаги:**
# 1. Создайте словарь с 3 записями.
# 2. Запросите у пользователя ключ и выведите соответствующее значение.
# 3. Если ключ не найден, выведите сообщение об ошибке.

# ### Задание 11: Проверка на простое число
# **Описание:** Напишите функцию, которая проверяет, является ли число простым.
# **Шаги:**
# 1. Создайте функцию `is_prime(n)`, где `n` — проверяемое число.
# 2. Используйте цикл `for`, чтобы проверить, делится ли число на другие числа.
# 3. Верните результат проверки.

# ### Задание 12: Функция для возведения в квадрат
# **Описание:** Напишите функцию, которая возвращает квадрат переданного числа.
# **Шаги:**
# 1. Создайте функцию `square(n)`, где `n` — входное число.
# 2. Возведите число в квадрат и верните результат.

# ### Задание 13: Удаление чисел меньше 10
# **Описание:** Напишите программу, которая удаляет все числа меньше 10 из списка.
# **Шаги:**
# 1. Создайте список с несколькими числами.
# 2. Используйте цикл `for` и метод `remove()`, чтобы удалить числа меньше 10.
# 3. Выведите результат.

# ### Задание 14: Подсчет гласных в строке
# **Описание:** Напишите программу, которая считает количество гласных в строке.
# **Шаги:**
# 1. Запросите строку у пользователя.
# 2. Используйте цикл `for`, чтобы пройти по каждому символу и проверить, является ли он гласной.
# 3. Подсчитайте количество гласных и выведите результат.

# ### Задание 15: Словарь с продуктами
# **Описание:** Создайте словарь с продуктами и их ценами. Добавьте новый продукт и обновите цену старого.
# **Шаги:**
# 1. Создайте словарь с 3 продуктами и их ценами.
# 2. Добавьте новый продукт и его цену.
# 3. Обновите цену одного из существующих продуктов.
# 4. Выведите обновленный словарь.

# ### Задание 16: Нахождение суммы значений в словаре
# **Описание:** Напишите программу, которая находит сумму всех значений в словаре.
# **Шаги:**
# 1. Создайте словарь с числовыми значениями.
# 2. Используйте цикл `for`, чтобы вычислить сумму всех значений.
# 3. Выведите результат.

# ### Задание 17: Генерация таблицы умножения
# **Описание:** Напишите программу, которая создает таблицу умножения для чисел от 1 до 5.
# **Шаги:**
# 1. Используйте два цикла `for` для генерации таблицы.
# 2. Умножайте числа и выводите результат в формате таблицы.

# ### Задание 18: Список четных чисел
# **Описание:** Напишите программу, которая создает список из всех четных чисел в диапазоне от 1 до 20.
# **Шаги:**
# 1. Создайте пустой список.
# 2. Используйте цикл `for`, чтобы добавить все четные числа в список.
# 3. Выведите результат.

# ### Задание 19: Словарь с именами и возрастами
# **Описание:** Создайте словарь, в котором ключи — это имена людей, а значения — их возраст. Проверьте, какой человек старше 18 лет.
# **Шаги:**
# 1. Создайте словарь с 3 записями.
# 2. Используйте цикл `for` и `if-else`, чтобы проверить возраст каждого человека.
# 3. Выведите имена тех, кто старше 18 лет.

# ### Задание 20: Функция для вычисления суммы чисел в диапазоне
# **Описание:** Напишите функцию, которая вычисляет сумму всех чисел в заданном диапазоне.
# **Шаги:**
# 1. Создайте функцию `sum_range(start, end)`, где `start` и `end` — начальное и конечное значения диапазона.
# 2. Используйте цикл `for`, чтобы суммировать все числа в диапазоне.
# 3. Верните результат.

# Эти задания помогут студентам освоить различные аспекты Python, от работы с списками и словарями до создания функций и использования циклов.